Master:
  Name: jenkins-master
  Image: "jenkinsci/jenkins"
  ImageTag: "2.60"
  ImagePullPolicy: "Always"
  Component: "jenkins-master"
  UseSecurity: true
  AdminUser: admin
  AdminPassword: superadmin
  Cpu: "200m"
  Memory: "256Mi"
# Set min/max heap here if needed with:
# JavaOpts: "-Xms512m -Xmx512m"
  ServicePort: 8080
# For minikube, set this to NodePort, elsewhere use LoadBalancer
# Use ClusterIP if your setup includes nginx ingress controller
# Use NodePort if your setup includes gce ingress controller
  ServiceType: NodePort
# Used to create Ingress record (should used with ServiceType: ClusterIP|NodePort)
  HostName: jenkins-msvc.rplus.ncommerce.com
# NodePort: 31589
  ContainerPort: 8080
  SlaveListenerPort: 50000
# LoadBalancerSourceRanges:
  

# List of plugins to be install during Jenkins master start
  InstallPlugins:
      - kubernetes:0.11
      - workflow-aggregator:2.5
      - credentials-binding:1.11
      - git:3.3.0
      - blueocean:1.0.1
      - bitbucket:1.1.5
      - google-container-registry-auth:0.3
      - slack:2.2
# Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  # ScriptApproval:
  #   - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #   - "new groovy.json.JsonSlurperClassic"
# List of groovy init scripts to be executed during Jenkins master start
  InitScripts:
#  - |
#    print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  CustomConfigMap: false

  Ingress:
    Annotations:
      kubernetes.io/ingress.class: gce
      kubernetes.io/tls-acme: "true"
      ingress.kubernetes.io/whitelist-source-range: "195.22.241.18/32, 87.255.70.204/32, 80.234.162.178/32, 80.234.162.170/32, 187.176.93.245/32, 
      74.3.96.194/32, 184.23.197.63/32, 38.140.109.237/32, 64.157.242.16/28, 104.55.106.80/28"

    TLS:
      - secretName: jenkins-msvc
        hosts:
          - jenkins-msvc.rplus.ncommerce.com

Agent:
  Enabled: true
  Image: jenkinsci/jnlp-slave
  ImageTag: 2.62
  Cpu: "200m"
  Memory: "256Mi"

Persistence:
  Enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # ExistingClaim:

  ## If defined, volume.beta.kubernetes.io/storage-class: <StorageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # StorageClass:
  AccessMode: ReadWriteOnce
  Size: 100Gi
  volumes:
#  - name: nothing
#    emptyDir: {}
  mounts:
#  - mountPath: /var/nothing
#    name: nothing
#    readOnly: true
